import React, {Component} from 'react';
import Navbar from 'components/navbar';
import './add-book.css';
import {validateRegistrationLogIn} from "constants/validateConstants";

class AddBooks extends Component {
    constructor(props) {
    super(props);
    this.state = {
        bookTitle: '',
        author: '',
        quantityOfPages: '',
        description: '',
        price: '',
        bookTitleValid: false,
        authorValid: false,
        quantityOfPagesValid: false,
        descriptionValid: false,
        priceValid: false,
        formValid: false
    };
}
    addBookOnClick = (event) => {
        if (this.state.formValid) {
            //this.props(this.state.bookTitle, this.state.author, this.state.quantityOfPages, this.state.description, this.state.price);
            this.setState({bookTitle: '', author: '', quantityOfPages: '', description: '', price: ''});
        }
        event.preventDefault();
    };

    handleChangeInput = (event) => {
        const name = event.target.name;
        const value = event.target.value;
        this.setState({[name]: value}, () => this.validateField(name, value));
    };

    validateField = (fieldName, value) => {
        let bookTitleValid = this.state.bookTitleValid;
        let authorValid = this.state.authorValid;
        let quantityOfPagesValid = this.state.quantityOfPagesValid;
        let descriptionValid = this.state.descriptionValid;
        let priceValid = this.state.priceValid;
        switch (fieldName) {
            case 'bookTitle':
                bookTitleValid = (validateRegistrationLogIn.name).test(value);
                break;
            case 'author':
                authorValid = (validateRegistrationLogIn.name).test(value);
                break;
            case 'pagesQuantity':
                quantityOfPagesValid = (validateRegistrationLogIn.pages).test(value);
                break;
            case 'description':
                descriptionValid = (validateRegistrationLogIn.name).test(value);
                break;
            case 'price':
                priceValid = (validateRegistrationLogIn.price).test(value);
                break;
            default:
                break;
        }
        this.setState({
            bookTitleValid,
            authorValid,
            quantityOfPagesValid,
            descriptionValid,
            priceValid,
            formValid: bookTitleValid && authorValid && quantityOfPagesValid && descriptionValid && priceValid
        });
    };

    render() {
        return (
            <div>
                <form>
                    <Navbar/>
                    <div className="container">
                        <div className="row">
                            <div className="add-product-layout col-md-6 col-md-offset-3">
                                <label>Enter name of the book:
                                    <input type="text" className="form-control" placeholder="book title"
                                           name="bookTitle" maxLength={40} value={this.state.bookTitle}
                                           onChange={this.handleChangeInput}/>
                                </label>
                                <label>Enter author:
                                    <input type="text" className="form-control" placeholder="author"
                                           name="author" maxLength={40} value={this.state.author}
                                           onChange={this.handleChangeInput}/>
                                </label>
                                <label>Enter pages:
                                    <input type="text" className="form-control" placeholder="pages"
                                           name="pagesQuantity" maxLength={20} value={this.state.quantityOfPages}
                                           onChange={this.handleChangeInput}/>
                                </label>
                                <label>Enter description:
                                    <textarea className="textarea-descript form-control " placeholder="description"
                                              name="description" maxLength={2000} value={this.state.description}
                                              onChange={this.handleChangeInput}>
                                    </textarea>
                                </label>
                                <label>Enter price:
                                    <input type="text" className="form-control" placeholder="price"
                                           name="price" maxLength={20} value={this.state.price}
                                           onChange={this.handleChangeInput}/>
                                </label>
                                <div className="choose-image">
                                    <p><input type="file" name="photo" multiple accept="image/*,image/jpeg"/></p>
                                </div>
                                <div className="add-book-btn">
                                    <button type="button" className="btn btn-primary">Add book</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        );
    }
}

export default AddBooks;
